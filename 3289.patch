diff --git a/data/org.eclipse.birt.data.oda.mongodb.ui/src/org/eclipse/birt/data/oda/mongodb/ui/impl/MongoDBDataSourcePageHelper.java b/data/org.eclipse.birt.data.oda.mongodb.ui/src/org/eclipse/birt/data/oda/mongodb/ui/impl/MongoDBDataSourcePageHelper.java
index 74ea91ea5f..b1dd91d7d3 100644
--- a/data/org.eclipse.birt.data.oda.mongodb.ui/src/org/eclipse/birt/data/oda/mongodb/ui/impl/MongoDBDataSourcePageHelper.java
+++ b/data/org.eclipse.birt.data.oda.mongodb.ui/src/org/eclipse/birt/data/oda/mongodb/ui/impl/MongoDBDataSourcePageHelper.java
@@ -488,6 +488,11 @@ public class MongoDBDataSourcePageHelper
 	
 	protected void handleKerberosAuthenticationSelection( )
 	{
+		// Added an if block to disable the text fields based on kerberos check
+		// box selection
+		if ( kerberosPrincipalText != null
+				&& !kerberosPrincipalText.isDisposed( ) )
+			resetKerberosAuthenticationEditControlStatus( );
 		if ( kerberosPasswordText != null
 				&& !kerberosPasswordText.isDisposed( ) )
 		{
@@ -509,6 +514,16 @@ public class MongoDBDataSourcePageHelper
 		}
 	}
 
+	// To disable/enable the text fields based on Kerberos Authentication Check
+	// box selection
+	protected void resetKerberosAuthenticationEditControlStatus( )
+	{
+		kerberosPrincipalText.setEnabled( useKerberosAuthentication );
+		gssapiServiceNameText.setEnabled( useKerberosAuthentication );
+		kerberosConfigurationFileText.setEnabled( useKerberosAuthentication );
+		gssAPIConfigurationFileText.setEnabled( useKerberosAuthentication );
+	}
+
 	private void handleKerberosRadioButtonSelection( )
 	{
 		kerberosConfigurationRadioBtn
@@ -684,22 +699,18 @@ public class MongoDBDataSourcePageHelper
 		// Kerberos
 		useKerberosAuthenticationCheckBox
 				.setSelection( useKerberosAuthentication );
-		if ( useKerberosAuthentication )
-		{
-			kerberosPrincipalText.setText( kerberosPrincipal == null
-					? EMPTY_STRING : kerberosPrincipal );
-			gssapiServiceNameText.setText( gssapiServiceName == null
-					? EMPTY_STRING : gssapiServiceName );
-
-			kerberosConfigurationFileText
-					.setText( kerberosConfigurationFile == null ? EMPTY_STRING
-							: kerberosConfigurationFile );
-			gssAPIConfigurationFileText.setText( gssAPIConfigurationFile == null
-					? EMPTY_STRING : gssAPIConfigurationFile );
-
-			// kerberosPasswordText.setText( kerberosPassword == null ?
-			// EMPTY_STRING : kerberosPassword );
-		}
+		kerberosPrincipalText.setText(
+				kerberosPrincipal == null ? EMPTY_STRING : kerberosPrincipal );
+		gssapiServiceNameText.setText(
+				gssapiServiceName == null ? EMPTY_STRING : gssapiServiceName );
+
+		kerberosConfigurationFileText.setText( kerberosConfigurationFile == null
+				? EMPTY_STRING : kerberosConfigurationFile );
+		gssAPIConfigurationFileText.setText( gssAPIConfigurationFile == null
+				? EMPTY_STRING : gssAPIConfigurationFile );
+
+		// kerberosPasswordText.setText( kerberosPassword == null ?
+		// EMPTY_STRING : kerberosPassword );
 		handleKerberosAuthenticationSelection( );
 
 		if ( isURITextFieldFoucs )
@@ -858,6 +869,15 @@ public class MongoDBDataSourcePageHelper
 				properties.setProperty( MongoDBDriver.KERBEROS_PASSWORD_PROP,
 						kerberosPassword );
 			}
+		} // to disable properties based on kerberos check box selection
+		else
+		{
+			properties.remove( MongoDBDriver.KERBEROS_PRINCIPAL_PROP );
+			properties.remove( MongoDBDriver.KERBEROS_GSSAPI_SERVICENAME_PROP );
+			properties.remove( MongoDBDriver.KERBEROS_KRB5CONFIG_FILE_PROP );
+			properties
+					.remove( MongoDBDriver.KERBEROS_GSS_JAAS_CONFIG_FILE_PROP );
+			properties.remove( MongoDBDriver.KERBEROS_PASSWORD_PROP );
 		}
 
 		return properties;
diff --git a/data/org.eclipse.birt.data.oda.mongodb/src/org/eclipse/birt/data/oda/mongodb/impl/MongoDBDriver.java b/data/org.eclipse.birt.data.oda.mongodb/src/org/eclipse/birt/data/oda/mongodb/impl/MongoDBDriver.java
index 6ce884b596..8b87466002 100644
--- a/data/org.eclipse.birt.data.oda.mongodb/src/org/eclipse/birt/data/oda/mongodb/impl/MongoDBDriver.java
+++ b/data/org.eclipse.birt.data.oda.mongodb/src/org/eclipse/birt/data/oda/mongodb/impl/MongoDBDriver.java
@@ -357,11 +357,12 @@ public class MongoDBDriver implements IDriver
 			{
 				MongoClientOptions clientOptions = clientOptionsBuilder
 						.build( );
-				InetAddress addr = InetAddress.getByName( kerberosPrincipal );
 				List<MongoCredential> mongoCredentials = new ArrayList<MongoCredential>( );
 				MongoCredential mongoCredential = null;
 				if ( useKerberos.equals( "true" ) )
 				{
+					InetAddress addr = InetAddress
+							.getByName( kerberosPrincipal );
 					mongoCredential = MongoCredential
 							.createGSSAPICredential( userName );
 					if ( serviceName != null && !serviceName.isEmpty( ) )
